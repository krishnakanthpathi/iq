// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  email           String    @unique
  rating          Int       @default(0)
  solved          Problem[]
  doubts_created  Doubt[]   @relation("UserCreatedDoubts")
  doubts_assigned Doubt[]   @relation("UserAssignedDoubts")
}

// the one who creates the question(actually deligated to AI)
model Teacher {
  id               Int       @id @default(autoincrement())
  name             String    @unique
  email            String    @unique
  created_problems Problem[]
}

// only created by the admin/ teacher
model Problem {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  userId      Int
  usersSolved User[]
  doubts      Doubt[]
  creatorId   Int
  creator     Teacher @relation(fields: [creatorId], references: [id])
}

model Doubt {
  id        Int     @id @default(autoincrement())
  title     String
  problemId Int
  creatorId Int
  assignees User[]  @relation("UserAssignedDoubts")
  problem   Problem @relation(fields: [problemId], references: [id])
  creator   User    @relation(name: "UserCreatedDoubts", fields: [creatorId], references: [id])
}

// FEATURE : CAN ADD EXPLICIT MANY-TO-MANY FOR ADDITIONAL METADATA(LIKE SOLVED AT) IF NEED BE
